generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id  String @id @default(uuid())
  uid Int    @unique @default(autoincrement())

  email    String @unique
  password String

  tokens Token[]
  role   RoleType @default(USER)

  username String?
  status   String?
  avatar   String?

  isVerified      Boolean @default(false) @map("is_verified")
  isEmailVerified Boolean @default(false) @map("is_email_verified")

  isDeactivated Boolean   @default(false) @map("is_deactivated")
  deactivatedAt DateTime? @map("deactivated_at")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Token {
  id String @id @default(uuid())

  token     String    @unique
  type      TokenType
  expiresIn DateTime  @map("expires_in")

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @map("user_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

enum TokenType {
  EMAIL_VERIFY
  PASSWORD_RESET
  DEACTIVATE_ACCOUNT
  TELEGRAM_AUTH

  @@map("token_types")
}

enum NotificationType {
  STREAM_START
  NEW_FOLLOWER
  NEW_SPONSORSHIP
  ENABLE_TWO_FACTOR
  VERIFIED_CHANNEL

  @@map("notification_types")
}

enum RoleType {
  ADMIN
  MODERATOR
  USER

  @@map("role_types")
}
